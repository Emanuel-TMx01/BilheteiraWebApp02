// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(WebApplication1Context))]
    partial class WebApplication1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ClassLibrary1.Bilhete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataRegisto")
                        .HasColumnType("datetime2");

                    b.Property<int>("DescontoId")
                        .HasColumnType("int");

                    b.Property<int>("FilmeId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DescontoId");

                    b.HasIndex("FilmeId");

                    b.ToTable("Bilhete");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            DataRegisto = new DateTime(2022, 11, 25, 18, 9, 3, 192, DateTimeKind.Local).AddTicks(453),
                            DescontoId = 2,
                            FilmeId = 3,
                            Stock = 35
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            DataRegisto = new DateTime(2022, 11, 25, 18, 9, 3, 192, DateTimeKind.Local).AddTicks(558),
                            DescontoId = 1,
                            FilmeId = 1,
                            Stock = 35
                        },
                        new
                        {
                            Id = 3,
                            ClienteId = 3,
                            DataRegisto = new DateTime(2022, 11, 25, 18, 9, 3, 192, DateTimeKind.Local).AddTicks(560),
                            DescontoId = 3,
                            FilmeId = 2,
                            Stock = 35
                        });
                });

            modelBuilder.Entity("ClassLibrary1.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Ana"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Bruno"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Rui"
                        });
                });

            modelBuilder.Entity("ClassLibrary1.Desconto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Desconto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Adulto",
                            Preco = 8.0
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Estudante",
                            Preco = 6.0
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Criança",
                            Preco = 4.0
                        });
                });

            modelBuilder.Entity("ClassLibrary1.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Filme");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genero = "Ficçao",
                            Nome = "Alien"
                        },
                        new
                        {
                            Id = 2,
                            Genero = "Corrida",
                            Nome = "Carros"
                        },
                        new
                        {
                            Id = 3,
                            Genero = "Romance",
                            Nome = "Vida"
                        });
                });

            modelBuilder.Entity("ClassLibrary1.Bilhete", b =>
                {
                    b.HasOne("ClassLibrary1.Cliente", "Cliente")
                        .WithMany("Bilhetes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassLibrary1.Desconto", "Desconto")
                        .WithMany("Bilhetes")
                        .HasForeignKey("DescontoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassLibrary1.Filme", "Filme")
                        .WithMany("Bilhetes")
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Desconto");

                    b.Navigation("Filme");
                });

            modelBuilder.Entity("ClassLibrary1.Cliente", b =>
                {
                    b.Navigation("Bilhetes");
                });

            modelBuilder.Entity("ClassLibrary1.Desconto", b =>
                {
                    b.Navigation("Bilhetes");
                });

            modelBuilder.Entity("ClassLibrary1.Filme", b =>
                {
                    b.Navigation("Bilhetes");
                });
#pragma warning restore 612, 618
        }
    }
}
